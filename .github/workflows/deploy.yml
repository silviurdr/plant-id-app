name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Extract exact placeholders from HTML
        run: |
          echo "=== CHECKING SECRETS ==="
          if [ -n "$PLANTNET_API_KEY" ]; then
            echo "✅ PLANTNET_API_KEY exists (length: ${#PLANTNET_API_KEY})"
            echo "First 8 chars: ${PLANTNET_API_KEY:0:8}..."
          else
            echo "❌ PLANTNET_API_KEY is empty or missing!"
          fi
          
          if [ -n "$GEMINI_API_KEY" ]; then
            echo "✅ GEMINI_API_KEY exists (length: ${#GEMINI_API_KEY})"
            echo "First 8 chars: ${GEMINI_API_KEY:0:8}..."
          else
            echo "❌ GEMINI_API_KEY is empty or missing!"
          fi
          
          echo ""
          echo "=== EXTRACTING EXACT PLACEHOLDERS ==="
          
          # Extract the exact placeholder text between quotes
          PLANTNET_PLACEHOLDER=$(grep -o '"[^"]*PLANTNET[^"]*"' index.html | head -1)
          GEMINI_PLACEHOLDER=$(grep -o '"[^"]*GEMINI[^"]*"' index.html | head -1)
          
          echo "Found PlantNet placeholder: $PLANTNET_PLACEHOLDER"
          echo "Found Gemini placeholder: $GEMINI_PLACEHOLDER"
          
          # Show hex values to see exact characters
          echo "PlantNet placeholder hex:"
          echo "$PLANTNET_PLACEHOLDER" | xxd
          echo "Gemini placeholder hex:"
          echo "$GEMINI_PLACEHOLDER" | xxd
          
          # Save these for the next step
          echo "$PLANTNET_PLACEHOLDER" > /tmp/plantnet_placeholder.txt
          echo "$GEMINI_PLACEHOLDER" > /tmp/gemini_placeholder.txt
        env:
          PLANTNET_API_KEY: ${{ secrets.PLANTNET_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      
      - name: Replace using exact extracted placeholders
        run: |
          echo "=== USING EXTRACTED PLACEHOLDERS FOR REPLACEMENT ==="
          
          # Read the exact placeholders we found
          if [ -f /tmp/plantnet_placeholder.txt ]; then
            PLANTNET_EXACT=$(cat /tmp/plantnet_placeholder.txt)
            echo "Using exact PlantNet placeholder: $PLANTNET_EXACT"
          else
            PLANTNET_EXACT='"__PLANTNET_API_KEY__"'
            echo "Using fallback PlantNet placeholder: $PLANTNET_EXACT"
          fi
          
          if [ -f /tmp/gemini_placeholder.txt ]; then
            GEMINI_EXACT=$(cat /tmp/gemini_placeholder.txt)
            echo "Using exact Gemini placeholder: $GEMINI_EXACT"
          else
            GEMINI_EXACT='"__GEMINI_API_KEY__"'
            echo "Using fallback Gemini placeholder: $GEMINI_EXACT"
          fi
          
          # Create backup
          cp index.html index.html.backup
          
          # Use Python to replace with the exact strings we found
          python3 -c "
          import os
          
          with open('index.html', 'r') as f:
              content = f.read()
          
          plantnet_key = os.environ['PLANTNET_API_KEY']
          gemini_key = os.environ['GEMINI_API_KEY']
          plantnet_placeholder = os.environ['PLANTNET_EXACT'].strip()
          gemini_placeholder = os.environ['GEMINI_EXACT'].strip()
          
          print(f'Replacing: {plantnet_placeholder} -> \"[API_KEY]\"')
          print(f'Replacing: {gemini_placeholder} -> \"[API_KEY]\"')
          
          # Replace with exact matches
          if plantnet_placeholder in content:
              content = content.replace(plantnet_placeholder, '\"' + plantnet_key + '\"')
              print('✅ PlantNet replacement done')
          else:
              print('❌ PlantNet placeholder not found in content')
          
          if gemini_placeholder in content:
              content = content.replace(gemini_placeholder, '\"' + gemini_key + '\"')  
              print('✅ Gemini replacement done')
          else:
              print('❌ Gemini placeholder not found in content')
          
          with open('index.html', 'w') as f:
              f.write(content)
          "
          
          echo ""
          echo "=== CHECKING RESULT ==="
          if grep -q "__.*_API_KEY__" index.html; then
            echo "❌ Still have unreplaced placeholders:"
            grep "__.*_API_KEY__" index.html
            echo "Trying manual sed replacement..."
            
            # Last resort - try to replace anything that looks like a placeholder
            sed -i 's/"__PLANTNET_API_KEY__"/"'"$PLANTNET_API_KEY"'"/g' index.html
            sed -i 's/"__GEMINI_API_KEY__"/"'"$GEMINI_API_KEY"'"/g' index.html
            
          else
            echo "✅ Replacement successful!"
            grep "const.*API_KEY" index.html | head -2
          fi
        env:
          PLANTNET_API_KEY: ${{ secrets.PLANTNET_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          PLANTNET_EXACT: $(cat /tmp/plantnet_placeholder.txt 2>/dev/null || echo '"__PLANTNET_API_KEY__"')
          GEMINI_EXACT: $(cat /tmp/gemini_placeholder.txt 2>/dev/null || echo '"__GEMINI_API_KEY__"')
      
      - name: Final verification
        run: |
          echo "=== FINAL HTML CONTENT ==="
          echo "Lines containing API keys:"
          grep "API_KEY\|PLANTNET\|GEMINI" index.html | head -5
          
          echo ""
          echo "Checking for unreplaced placeholders:"
          if grep -q "__.*_API_KEY__" index.html; then
            echo "❌ WARNING: Still have unreplaced placeholders!"
            grep "__.*_API_KEY__" index.html
          else
            echo "✅ No placeholders found - ready to deploy!"
          fi
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
